#pragma once

#include "config/constants.h"

#if MODE_ARROW

#include "modules/ModeModule.h"

class ArrowMode : public ModeModule
{
private:
    const std::vector<std::vector<uint16_t>> arrow = {
        {
            0b000000010000000,
            0b000000010000000,
            0b000000000000000,
            0b000000000000000,
            0b000000000000000,
            0b000000010000000,
            0b000000010000000,
            0b000000000000000,
            0b000000000000000,
            0b100000000000001,
            0b000000010000000,
            0b000100010001000,
            0b000000000000000,
            0b000001000100000,
            0b000000000000000,
        },
        {
            0b0000001000000,
            0b0000001000000,
            0b0000000000000,
            0b0000000000000,
            0b0000000000000,
            0b0000000000000,
            0b0000001000000,
            0b0000001000000,
            0b0000000000000,
            0b1000000000001,
            0b0000000000000,
            0b0010000000100,
            0b0000001000000,
            0b0000101010000,
        },
        {
            0b00000100000,
            0b00000100000,
            0b00000000000,
            0b00000000000,
            0b00000000000,
            0b00000000000,
            0b00000100000,
            0b10000100001,
            0b00000000000,
            0b00100000100,
            0b00000000000,
        },
        {
            0b000010000,
            0b000010000,
            0b000000000,
            0b000000000,
            0b000000000,
            0b100000001,
            0b000010000,
            0b001010100,
        },
        {
            0b0001000,
            0b0001000,
            0b0000000,
            0b1000001,
            0b0000000,
        },
        {
            0b00100,
            0b10101,
        },
    };

    bool direction = true;

    uint8_t index = 0;

    unsigned long lastMillis = 0;

public:
    ArrowMode() : ModeModule("Arrow") {};

    void handle() override;
};

#endif // MODE_ARROW
