#pragma once

#include "modules/FontModule.h"

class MediumFont : public FontModule
{
private:
    const std::vector<Symbol> ascii = {
        {
            // 0x20, (Space)
            {},
            7,
            0,
        },
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {
            // 0x30, 0
            {
                0b0111110,
                0b1100011,
                0b1110011,
                0b1101011,
                0b1100111,
                0b1100011,
                0b0111110,
            },
            0,
            0,
        },
        {
            // 0x31, 1
            {
                0b0011,
                0b0111,
                0b1111,
                0b0011,
                0b0011,
                0b0011,
                0b0011,
            },
            0,
            0,
        },
        {
            // 0x32, 2
            {
                0b1111110,
                0b0000011,
                0b0000011,
                0b0111110,
                0b1100000,
                0b1100011,
                0b1111111,
            },
            0,
            0,
        },
        {
            // 0x33, 3
            {
                0b0111110,
                0b1100011,
                0b0000011,
                0b0011111,
                0b0000011,
                0b1100011,
                0b0111110,
            },
            0,
            0,
        },
        {
            // 0x34, 4
            {
                0b1100011,
                0b1100011,
                0b1100011,
                0b0111111,
                0b0000011,
                0b0000011,
                0b0000011,
            },
            0,
            0,
        },
        {
            // 0x35, 5
            {
                0b1111111,
                0b1100011,
                0b1100000,
                0b1111110,
                0b0000011,
                0b1100011,
                0b0111110,
            },
            0,
            0,
        },
        {
            // 0x36, 6
            {
                0b0111110,
                0b1100011,
                0b1100000,
                0b1111110,
                0b1100011,
                0b1100011,
                0b0111110,
            },
            0,
            0,
        },
        {
            // 0x37, 7
            {
                0b1111111,
                0b1000011,
                0b0000111,
                0b0001100,
                0b0011000,
                0b0011000,
                0b0011000,
            },
            0,
            0,
        },
        {
            // 0x38, 8
            {
                0b0111110,
                0b1100011,
                0b1100011,
                0b0111110,
                0b1100011,
                0b1100011,
                0b0111110,
            },
            0,
            0,
        },
        {
            // 0x39, 9
            {
                0b0111110,
                0b1100011,
                0b1100011,
                0b0111111,
                0b0000011,
                0b1100011,
                0b0111110,
            },
            0,
            0,
        },
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {
            // 0x49, I
            {
                0b111,
                0b010,
                0b010,
                0b010,
                0b010,
                0b010,
                0b111,
            },
            0,
            0,
        },
        {},
        {},
        {},
        {},
        {},
        {
            // 0x4F, O
            {
                0b011110,
                0b100001,
                0b100001,
                0b100001,
                0b100001,
                0b100001,
                0b011110,
            },
            0,
            0,
        },
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {},
        {
            // 0x6F, o
            {
                0b01110,
                0b10001,
                0b10001,
                0b10001,
                0b01110,
            },
            0,
            0,
        },
    };

public:
    MediumFont();

    Symbol getChar(uint32_t character) override;
};

extern MediumFont *FontMedium;
